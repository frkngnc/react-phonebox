"use strict";(self.webpackChunkreact_phonebox_docs=self.webpackChunkreact_phonebox_docs||[]).push([[651],{4167:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"usage/advanced-usage","title":"Advanced Usage","description":"If you need full control over formatting, placeholder, validation logic, or want to combine with external form libraries \u2014 use PhoneBoxInput along with our powerful hooks.","source":"@site/docs/usage/advanced-usage.md","sourceDirName":"usage","slug":"/usage/advanced-usage","permalink":"/react-phonebox/docs/usage/advanced-usage","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usage/advanced-usage.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Basic Usage","permalink":"/react-phonebox/docs/usage/basic-usage"},"next":{"title":"Form Integration","permalink":"/react-phonebox/docs/usage/form-integration"}}');var r=t(4848),a=t(8453);const s={},l="Advanced Usage",i={},c=[{value:"Import",id:"import",level:2},{value:"Example",id:"example",level:2},{value:"Hooks",id:"hooks",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"advanced-usage",children:"Advanced Usage"})}),"\n",(0,r.jsxs)(n.p,{children:["If you need full control over formatting, placeholder, validation logic, or want to combine with external form libraries \u2014 use ",(0,r.jsx)(n.code,{children:"PhoneBoxInput"})," along with our powerful hooks."]}),"\n",(0,r.jsx)(n.p,{children:"This allows you to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\ud83c\udfaf Control the formatting logic"}),"\n",(0,r.jsx)(n.li,{children:"\ud83e\uddea Use custom validation"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udf0d Localize everything"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udd01 Handle selected country manually"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import {\n  PhoneBoxInput,\n  useFormatter,\n  useExampleNumber,\n  useMobileOnly\n} from 'react-phonebox';\nimport 'react-phonebox/style.css';\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"'use client';\nimport React, { useState } from 'react';\nimport {\n  PhoneBoxInput,\n  useFormatter,\n  useExampleNumber,\n  useMobileOnly\n} from 'react-phonebox';\nimport 'react-phonebox/style.css';\n\nexport default function AdvancedExample() {\n  const [value, setValue] = useState('');\n  const [country, setCountry] = useState({\n    iso2: 'TR',\n    dialCode: '+90',\n    name: 'Turkey',\n  });\n\n  const { format } = useFormatter(country.iso2);\n  const { placeholder, example, maxDigits } = useExampleNumber(country.iso2);\n  const { validate } = useMobileOnly();\n\n  const digits = value.replace(/\\D/g, '').slice(0, maxDigits ?? 15);\n  const formatted = format(digits);\n  const raw = country.dialCode + digits;\n  const validation = validate(raw, false);\n\n  return (\n    <div>\n      <PhoneBoxInput\n        value={formatted}\n        onChange={setValue}\n        initialCountry=\"TR\"\n        locale=\"tr\"\n        theme=\"dark\"\n        searchPlaceholder=\"\xdclke ara...\"\n        onCountryChange={setCountry}\n        placeholder={placeholder}\n      />\n\n      <p><strong>Placeholder:</strong> {placeholder}</p>\n      <p><strong>Raw:</strong> {raw}</p>\n      <p><strong>Valid?</strong> {validation.isValid ? '\u2705' : '\u274c'}</p>\n      {example && (\n        <p><strong>Example:</strong> {example.formatInternational()}</p>\n      )}\n    </div>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"hooks",children:"Hooks"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Hook"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"useFormatter(iso2)"})}),(0,r.jsx)(n.td,{children:"Returns a formatter to live-format digits"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"useExampleNumber(iso2)"})}),(0,r.jsx)(n.td,{children:"Returns an example number and placeholder"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"useMobileOnly()"})}),(0,r.jsx)(n.td,{children:"Returns a validator function for mobile-only or general numbers"})]})]})]}),"\n",(0,r.jsx)(n.hr,{})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var o=t(6540);const r={},a=o.createContext(r);function s(e){const n=o.useContext(a);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);