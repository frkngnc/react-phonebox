"use strict";(self.webpackChunkreact_phonebox_docs=self.webpackChunkreact_phonebox_docs||[]).push([[35],{8453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>l});var t=o(6540);const r={},a=t.createContext(r);function i(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(a.Provider,{value:n},e.children)}},8828:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"usage/form-integration","title":"Form Integration","description":"The PhoneBox component works seamlessly with form libraries like react-hook-form and formik.","source":"@site/docs/usage/form-integration.md","sourceDirName":"usage","slug":"/usage/form-integration","permalink":"/react-phonebox/docs/usage/form-integration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/usage/form-integration.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Advanced Usage","permalink":"/react-phonebox/docs/usage/advanced-usage"},"next":{"title":"Hooks Overview","permalink":"/react-phonebox/docs/hooks-overview"}}');var r=o(4848),a=o(8453);const i={},l="Form Integration",s={},c=[{value:"\u2705 React Hook Form",id:"-react-hook-form",level:2},{value:"Installation",id:"installation",level:3},{value:"Example",id:"example",level:3},{value:"\u2705 Formik",id:"-formik",level:2},{value:"Installation",id:"installation-1",level:3},{value:"Example",id:"example-1",level:3}];function m(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"form-integration",children:"Form Integration"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"PhoneBox"})," component works seamlessly with form libraries like ",(0,r.jsx)(n.code,{children:"react-hook-form"})," and ",(0,r.jsx)(n.code,{children:"formik"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-react-hook-form",children:"\u2705 React Hook Form"}),"\n",(0,r.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install react-hook-form\n"})}),"\n",(0,r.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"'use client';\nimport React from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { PhoneBox } from 'react-phonebox';\nimport 'react-phonebox/style.css';\n\nexport default function RHFExample() {\n  const { control, handleSubmit, watch } = useForm({\n    defaultValues: {\n      phone: ''\n    }\n  });\n\n  const onSubmit = (data: any) => {\n    console.log('Form data:', data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        name=\"phone\"\n        control={control}\n        render={({ field }) => (\n          <PhoneBox\n            value={field.value}\n            onChange={field.onChange}\n            initialCountry=\"US\"\n            locale=\"en\"\n            mobileOnly\n          />\n        )}\n      />\n      <button type=\"submit\" style={{ marginTop: '1rem' }}>Submit</button>\n    </form>\n  );\n}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-formik",children:"\u2705 Formik"}),"\n",(0,r.jsx)(n.h3,{id:"installation-1",children:"Installation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npm install formik\n"})}),"\n",(0,r.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"'use client';\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { PhoneBox } from 'react-phonebox';\nimport 'react-phonebox/style.css';\n\nexport default function FormikExample() {\n  const formik = useFormik({\n    initialValues: {\n      phone: '',\n    },\n    onSubmit: (values) => {\n      console.log('Formik form data:', values);\n    },\n  });\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <PhoneBox\n        value={formik.values.phone}\n        onChange={(val) => formik.setFieldValue('phone', val)}\n        initialCountry=\"US\"\n        locale=\"en\"\n        mobileOnly\n      />\n      <button type=\"submit\" style={{ marginTop: '1rem' }}>Submit</button>\n    </form>\n  );\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}}}]);